syntax v1.0

namespace "Omnius.Core.Serialization.OmniPack.CodeGenerator.Internal"
option csharp_access_level = "internal"

enum Enum1 : int8 {
    Yes = 0,
    No = 1,
}

enum Enum2 : int16 {
    Yes = 0,
    No = 1,
}

enum Enum3 : int32 {
    Yes = 0,
    No = 1,
}

enum Enum4 : int64 {
    Yes = 0,
    No = 1,
}

enum Enum5 : uint8 {
    Yes = 0,
    No = 1,
}

enum Enum6 : uint16 {
    Yes = 0,
    No = 1,
}

enum Enum7 : uint32 {
    Yes = 0,
    No = 1,
}

enum Enum8: uint64 {
    Yes = 0,
    No = 1,
}

[csharp_struct]
struct StructMessageElement_Struct {
    X0: bool,
} 

[csharp_struct]
table TableMessageElement_Struct {
    X0: bool = 0,
} 

struct StructMessageElement_Class {
    X0: bool,
} 

table TableMessageElement_Class {
    X0: bool = 0,
} 

[csharp_struct]
struct StructMessage_Struct {
    X0: bool,
    X1: int8,
    X2: int16,
    X3: int32,
    X4: int64,
    X5: uint8,
    X6: uint16,
    X7: uint32,
    X8: uint64,
    X9: Enum1,
    X10: Enum2,
    X11: Enum3,
    X12: Enum4,
    X13: Enum5,
    X14: Enum6,
    X15: Enum7,
    X16: Enum8,
    X17: float32,
    X18: float64,
    X19: string(capacity: 128), // maximum bytes size is 128
    X20: timestamp,
    X21: bytes(capacity: 256), // maximum bytes size is 256
    X22: bytes(capacity: 256, recyclable: true), // use csharp_recyclable memory
    X23: vector<string(capacity: 128)>(capacity: 16),
    X24: map<uint8, string(capacity: 128)>(capacity: 32),
    X25: StructMessageElement_Struct,
    X26: TableMessageElement_Struct,
    X27: StructMessageElement_Class,
    X28: TableMessageElement_Class,
}

[csharp_struct]
table TableMessage_Struct {
    X0: bool = 0,
    X1: int8 = 1,
    X2: int16 = 2,
    X3: int32 = 3,
    X4: int64 = 4,
    X5: uint8 = 5,
    X6: uint16 = 6,
    X7: uint32 = 7,
    X8: uint64 = 8,
    X9: Enum1 = 9,
    X10: Enum2 = 10,
    X11: Enum3 = 11,
    X12: Enum4 = 12,
    X13: Enum5 = 13,
    X14: Enum6 = 14,
    X15: Enum7 = 15,
    X16: Enum8 = 16,
    X17: float32 = 17,
    X18: float64 = 18,
    X19: string(capacity: 128) = 19, // maximum bytes size is 128
    X20: timestamp = 20,
    X21: bytes(capacity: 256) = 21, // maximum bytes size is 256
    X22: bytes(capacity: 256, recyclable: true) = 22, // use csharp_recyclable memory
    X23: vector<string(capacity: 128)>(capacity: 16) = 23,
    X24: map<uint8, string(capacity: 128)>(capacity: 32) = 24,
    X25: StructMessageElement_Struct = 25,
    X26: TableMessageElement_Struct = 26,
    X27: StructMessageElement_Class = 27,
    X28: TableMessageElement_Class = 28,
}

[csharp_struct]
table NullableTableMessage_Struct {
    X0: bool? = 0,
    X1: int8? = 1,
    X2: int16? = 2,
    X3: int32? = 3,
    X4: int64? = 4,
    X5: uint8? = 5,
    X6: uint16? = 6,
    X7: uint32? = 7,
    X8: uint64? = 8,
    X9: Enum1? = 9,
    X10: Enum2? = 10,
    X11: Enum3? = 11,
    X12: Enum4? = 12,
    X13: Enum5? = 13,
    X14: Enum6? = 14,
    X15: Enum7? = 15,
    X16: Enum8? = 16,
    X17: float32? = 17,
    X18: float64? = 18,
    X19: string?(capacity: 128) = 19, // maximum bytes size is 128
    X20: timestamp? = 20,
    X21: bytes?(capacity: 256) = 21, // maximum bytes size is 256
    X22: bytes?(capacity: 256, recyclable: true) = 22, // use csharp_recyclable memory
    X23: vector<string(capacity: 128)>?(capacity: 16) = 23,
    X24: map<uint8, string(capacity: 128)>?(capacity: 32) = 24,
    X25: StructMessageElement_Struct? = 25,
    X26: TableMessageElement_Struct? = 26,
    X27: StructMessageElement_Class? = 27,
    X28: TableMessageElement_Class? = 28,
}

struct StructMessage_Class {
    X0: bool,
    X1: int8,
    X2: int16,
    X3: int32,
    X4: int64,
    X5: uint8,
    X6: uint16,
    X7: uint32,
    X8: uint64,
    X9: Enum1,
    X10: Enum2,
    X11: Enum3,
    X12: Enum4,
    X13: Enum5,
    X14: Enum6,
    X15: Enum7,
    X16: Enum8,
    X17: float32,
    X18: float64,
    X19: string(capacity: 128), // maximum bytes size is 128
    X20: timestamp,
    X21: bytes(capacity: 256), // maximum bytes size is 256
    X22: bytes(capacity: 256, recyclable: true), // use csharp_recyclable memory
    X23: vector<string(capacity: 128)>(capacity: 16),
    X24: map<uint8, string(capacity: 128)>(capacity: 32),
    X25: StructMessageElement_Struct,
    X26: TableMessageElement_Struct,
    X27: StructMessageElement_Class,
    X28: TableMessageElement_Class,
}

table TableMessage_Class {
    X0: bool = 0,
    X1: int8 = 1,
    X2: int16 = 2,
    X3: int32 = 3,
    X4: int64 = 4,
    X5: uint8 = 5,
    X6: uint16 = 6,
    X7: uint32 = 7,
    X8: uint64 = 8,
    X9: Enum1 = 9,
    X10: Enum2 = 10,
    X11: Enum3 = 11,
    X12: Enum4 = 12,
    X13: Enum5 = 13,
    X14: Enum6 = 14,
    X15: Enum7 = 15,
    X16: Enum8 = 16,
    X17: float32 = 17,
    X18: float64 = 18,
    X19: string(capacity: 128) = 19, // maximum bytes size is 128
    X20: timestamp = 20,
    X21: bytes(capacity: 256) = 21, // maximum bytes size is 256
    X22: bytes(capacity: 256, recyclable: true) = 22, // use csharp_recyclable memory
    X23: vector<string(capacity: 128)>(capacity: 16) = 23,
    X24: map<uint8, string(capacity: 128)>(capacity: 32) = 24,
    X25: StructMessageElement_Struct = 25,
    X26: TableMessageElement_Struct = 26,
    X27: StructMessageElement_Class = 27,
    X28: TableMessageElement_Class = 28,
}

table NullableTableMessage_Class {
    X0: bool? = 0,
    X1: int8? = 1,
    X2: int16? = 2,
    X3: int32? = 3,
    X4: int64? = 4,
    X5: uint8? = 5,
    X6: uint16? = 6,
    X7: uint32? = 7,
    X8: uint64? = 8,
    X9: Enum1? = 9,
    X10: Enum2? = 10,
    X11: Enum3? = 11,
    X12: Enum4? = 12,
    X13: Enum5? = 13,
    X14: Enum6? = 14,
    X15: Enum7? = 15,
    X16: Enum8? = 16,
    X17: float32? = 17,
    X18: float64? = 18,
    X19: string?(capacity: 128) = 19, // maximum bytes size is 128
    X20: timestamp? = 20,
    X21: bytes?(capacity: 256) = 21, // maximum bytes size is 256
    X22: bytes?(capacity: 256, recyclable: true) = 22, // use csharp_recyclable memory
    X23: vector<string(capacity: 128)>?(capacity: 16) = 23,
    X24: map<uint8, string(capacity: 128)>?(capacity: 32) = 24,
    X25: StructMessageElement_Struct? = 25,
    X26: TableMessageElement_Struct? = 26,
    X27: StructMessageElement_Class? = 27,
    X28: TableMessageElement_Class? = 28,
}
