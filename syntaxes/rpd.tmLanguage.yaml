name: Rocket Pack 1
scopeName: source.rpd
fileTypes:
  - rpd
patterns:
  - include: "#comments"
  - include: "#syntax"
  - include: "#namespace"
  - include: "#using"
  - include: "#optionStmt"
  - include: "#message"
  - include: "#enum"
  - include: "#service"
repository:
  comments:
    patterns:
      - name: comment.block.rpd
        begin: "/\\*"
        end: "\\*/"
      - name: comment.line.double-slash.rpd
        begin: "//"
        end: "$\\n?"
  syntax:
    match: \s*(syntax)\s*(v[\d|\.]+)\s*
    captures:
      "1":
        name: keyword.other.rpd
      "2":
        name: string.unquoted.rpd.syntax
  namespace:
    match: \s*(namespace)\s+("[^"]+")\s*
    captures:
      "1":
        name: keyword.other.rpd
      "2":
        name: string.quoted.double.rpd.namespace
  using:
    match: \s*(using)\s+("[^"]+")\s*
    captures:
      "1":
        name: keyword.other.rpd
      "2":
        name: string.quoted.double.rpd.import
  optionStmt:
    begin: "(option)\\s+(\\w+|\\(\\w+(\\.\\w+)*\\))(\\.\\w+)*\\s*="
    beginCaptures:
      "1":
        name: keyword.other.rpd
      "2":
        name: support.other.rpd
      "3":
        name: support.other.rpd
      "4":
        name: support.other.rpd
    end: ";"
    patterns:
      - include: "#constants"
      - include: "#number"
      - include: "#string"
      - include: "#subMsgOption"
  subMsgOption:
    begin: "\\{"
    end: "\\}"
    patterns:
      - match: "(\\w+)\\s*:"
        captures:
          "1":
            name: variable.other.rpd
      - include: "#constants"
      - include: "#number"
      - include: "#string"
  fieldOptions:
    begin: "\\["
    end: "\\]"
    patterns:
      - include: "#constants"
      - include: "#number"
      - include: "#string"
      - include: "#subMsgOption"
      - include: "#optionName"
  optionName:
    match: "(\\w+|\\(\\w+(\\.\\w+)*\\))(\\.\\w+)*"
    captures:
      "1":
        name: support.other.rpd
      "2":
        name: support.other.rpd
      "3":
        name: support.other.rpd
  message:
    begin: "(message|extend)(\\s+)([A-Za-z][A-Za-z0-9_.]*)(\\s*)(\\{)?"
    beginCaptures:
      "1":
        name: keyword.other.rpd
      "3":
        name: entity.name.class.message.rpd
    end: "\\}"
    patterns:
      - include: "#reserved"
      - include: "$self"
      - include: "#enum"
      - include: "#optionStmt"
      - include: "#comments"
      - include: "#oneof"
      - include: "#field"
      - include: "#mapfield"
  reserved:
    begin: "(reserved)\\s+"
    beginCaptures:
      "1":
        name: keyword.other.rpd
    end: ";"
    patterns:
      - match: "(\\d+)(\\s+(to)\\s+(\\d+))?"
        captures:
          "1":
            name: constant.numeric.rpd
          "3":
            name: keyword.other.rpd
          "4":
            name: constant.numeric.rpd
      - include: "#string"
  field:
    begin: "\\s*(optional|repeated|required)?\\s*\\b([\\w.]+)\\s+(\\w+)\\s*=\\s*(\\d+)"
    beginCaptures:
      "1":
        name: storage.modifier.rpd
      "2":
        name: storage.type.rpd
      "3":
        name: variable.other.rpd
      "4":
        name: constant.numeric.rpd
    end: ";"
    patterns:
      - include: "#fieldOptions"
  mapfield:
    begin: "\\s*(map)\\s*<\\s*([\\w.]+)\\s*,\\s*([\\w.]+)\\s*>\\s+(\\w+)\\s*=\\s*(\\d+)"
    beginCaptures:
      "1":
        name: storage.type.rpd
      "2":
        name: storage.type.rpd
      "3":
        name: storage.type.rpd
      "4":
        name: variable.other.rpd
      "5":
        name: constant.numeric.rpd
    end: ";"
    patterns:
      - include: "#fieldOptions"
  oneof:
    begin: "(oneof)\\s+([A-Za-z][A-Za-z0-9_]*)\\s*\\{?"
    beginCaptures:
      "1":
        name: keyword.other.rpd
    end: "\\}"
    patterns:
      - include: "#optionStmt"
      - include: "#comments"
      - include: "#field"
  enum:
    begin: "(enum)(\\s+)([A-Za-z][A-Za-z0-9_]*)(\\s*)(\\{)?"
    beginCaptures:
      "1":
        name: keyword.other.rpd
      "3":
        name: entity.name.class.rpd
    end: "\\}"
    patterns:
      - include: "#reserved"
      - include: "#optionStmt"
      - include: "#comments"
      - begin: "([A-Za-z][A-Za-z0-9_]*)\\s*=\\s*([0-9]*)"
        beginCaptures:
          "1":
            name: constant.other.rpd
          "2":
            name: constant.numeric.rpd
        end: ";"
        patterns:
          - include: "#fieldOptions"
  service:
    begin: "(service)\\s+([A-Za-z][A-Za-z0-9_.]*)\\s*\\{?"
    beginCaptures:
      "1":
        name: keyword.other.rpd
      "2":
        name: entity.name.class.message.rpd
    end: "\\}"
    patterns:
      - include: "#comments"
      - include: "#optionStmt"
      - include: "#method"
  method:
    begin: "(rpc)\\s+([A-Za-z][A-Za-z0-9_]*)"
    beginCaptures:
      "1":
        name: keyword.other.rpd
      "2":
        name: entity.name.function
    end: "\\}|;"
    patterns:
      - include: "#comments"
      - include: "#optionStmt"
      - include: "#rpcKeywords"
      - include: "#ident"
  rpcKeywords:
    match: "\\b(stream|returns)\\b"
    name: keyword.other.rpd
  ident:
    match: "[A-Za-z][A-Za-z0-9_]*"
    name: entity.name.class.rpd
  constants:
    match: "\\b(true|false|max|[A-Z_]+)\\b"
    name: constant.language.rpd
  storagetypes:
    match: "\\b(double|float|int32|int64|uint32|uint64|sint32|sint64|fixed32|fixed64|sfixed32|sfixed64|bool|string|bytes)\\b"
    name: storage.type.rpd
  string:
    match: ('([^']|\')*')|("([^"]|\")*")
    name: string.quoted.double.rpd
  number:
    name: constant.numeric.rpd
    match: "\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)\\b"
